(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{296:function(e,s,t){"use strict";t.r(s);var a=t(13),n=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("https://kubesphere.com.cn/docs/quick-start/all-in-one-on-linux/")]),e._v(" "),s("h2",{attrs:{id:"_1-安装kubekey"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装kubekey"}},[e._v("#")]),e._v(" 1. 安装KubeKey")]),e._v(" "),s("h4",{attrs:{id:"_1-先执行以下命令以确保您从正确的区域下载-kubekey。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-先执行以下命令以确保您从正确的区域下载-kubekey。"}},[e._v("#")]),e._v(" （1）先执行以下命令以确保您从正确的区域下载 KubeKey。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export KKZONE=cn\n")])])]),s("h4",{attrs:{id:"_2-执行以下命令下载-kubekey。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行以下命令下载-kubekey。"}},[e._v("#")]),e._v(" （2）执行以下命令下载 KubeKey。")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /mnt/windows_share/kubekey\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sfL")]),e._v(" https://get-kk.kubesphere.io "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("v1.0.1 "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -\n")])])]),s("h4",{attrs:{id:"_3-然后-使kk成为全局可执行文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-然后-使kk成为全局可执行文件"}},[e._v("#")]),e._v(" （3）然后，使kk成为全局可执行文件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cp ./kk /usr/local/bin \n")])])]),s("h2",{attrs:{id:"_2-使用kk安装kubesphere和kubernetes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用kk安装kubesphere和kubernetes"}},[e._v("#")]),e._v(" 2. 使用kk安装kubesphere和kubernetes")]),e._v(" "),s("h4",{attrs:{id:"安装依赖tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖tools"}},[e._v("#")]),e._v(" 安装依赖tools")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo apt-get update\nsudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common conntrack\n")])])]),s("h4",{attrs:{id:"_1-创建一个配置文件模版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建一个配置文件模版"}},[e._v("#")]),e._v(" （1）创建一个配置文件模版")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("kk create config --with-kubernetes v1.18.6 --with-kubesphere v3.0.0 -f ./config-kubesphere.yaml\n")])])]),s("h4",{attrs:{id:"_2-修改配置文件-添加上节点信息-节点名称-ip等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改配置文件-添加上节点信息-节点名称-ip等"}},[e._v("#")]),e._v(" （2）修改配置文件，添加上节点信息（节点名称，ip等）")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('apiVersion: kubekey.kubesphere.io/v1alpha1\nkind: Cluster\nmetadata:\n  name: sample\nspec:\n  hosts:\n  - {name: master, address: 192.168.1.108, internalAddress: 192.168.1.108, user: root, password: 12345678}\n  - {name: slave, address: 192.168.1.110, internalAddress: 192.168.1.110, user: root, password: 12345678}\n  roleGroups:\n    etcd:\n    - master\n    master: \n    - master\n    worker:\n    - master\n    - slave\n  controlPlaneEndpoint:\n    domain: lb.kubesphere.local\n    address: ""\n    port: "6443"\n  kubernetes:\n    version: v1.18.6\n    imageRepo: kubesphere\n    clusterName: cluster.local\n  network:\n    plugin: calico\n    kubePodsCIDR: 10.233.64.0/18\n    kubeServiceCIDR: 10.233.0.0/18\n  registry:\n    registryMirrors: []\n    insecureRegistries: []\n  addons: []\n\n\n---\napiVersion: installer.kubesphere.io/v1alpha1\nkind: ClusterConfiguration\nmetadata:\n  name: ks-installer\n  namespace: kubesphere-system\n  labels:\n    version: v3.0.0\nspec:\n  local_registry: ""\n  persistence:\n    storageClass: ""\n  authentication:\n    jwtSecret: ""\n  etcd:\n    monitoring: true\n    endpointIps: localhost\n    port: 2379\n    tlsEnable: true\n  common:\n    es:\n      elasticsearchDataVolumeSize: 20Gi\n      elasticsearchMasterVolumeSize: 4Gi\n      elkPrefix: logstash\n      logMaxAge: 7\n    mysqlVolumeSize: 20Gi\n    minioVolumeSize: 20Gi\n    etcdVolumeSize: 20Gi\n    openldapVolumeSize: 2Gi\n    redisVolumSize: 2Gi\n  console:\n    enableMultiLogin: false  # enable/disable multi login\n    port: 30880\n  alerting:\n    enabled: false\n  auditing:\n    enabled: false\n  devops:\n    enabled: false\n    jenkinsMemoryLim: 2Gi\n    jenkinsMemoryReq: 1500Mi\n    jenkinsVolumeSize: 8Gi\n    jenkinsJavaOpts_Xms: 512m\n    jenkinsJavaOpts_Xmx: 512m\n    jenkinsJavaOpts_MaxRAM: 2g\n  events:\n    enabled: false\n    ruler:\n      enabled: true\n      replicas: 2\n  logging:\n    enabled: false\n    logsidecarReplicas: 2\n  metrics_server:\n    enabled: true\n  monitoring:\n    prometheusMemoryRequest: 400Mi\n    prometheusVolumeSize: 20Gi\n  multicluster:\n    clusterRole: none  # host | member | none\n  networkpolicy:\n    enabled: false\n  notification:\n    enabled: false\n  openpitrix:\n    enabled: false\n  servicemesh:\n    enabled: false\n')])])]),s("h4",{attrs:{id:"_3-执行及安装kubernetes-v1-18-6和kubesphere-v3-0-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行及安装kubernetes-v1-18-6和kubesphere-v3-0-0"}},[e._v("#")]),e._v(" （3）执行及安装kubernetes v1.18.6和kubesphere v3.0.0")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("kk create cluster -f ./config-kubesphere.yaml\n")])])]),s("h2",{attrs:{id:"_3-一些错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-一些错误"}},[e._v("#")]),e._v(" 3. 一些错误")]),e._v(" "),s("h4",{attrs:{id:"_1-错误1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-错误1"}},[e._v("#")]),e._v(" (1)错误1")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("error execution phase preflight: [preflight] Some fatal errors occurred:\n\t[ERROR ExternalEtcdVersion]: couldn't load external etcd's certificate and key pair /etc/ssl/etcd/ssl/node-slave.pem, /etc/ssl/etcd/ssl/node-slave-key.pem: open /etc/ssl/etcd/ssl/node-slave.pem: no such file or directory\n\t[ERROR ExternalEtcdClientCertificates]: /etc/ssl/etcd/ssl/node-slave.pem doesn't exist\n\t[ERROR ExternalEtcdClientCertificates]: /etc/ssl/etcd/ssl/node-slave-key.pem doesn't exist\n[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`\nTo see the stack trace of this error execute with --v=5 or higher: Process exited with status 1  node=192.168.1.108\nWARN[13:26:20 CST] Task failed ...                              \nWARN[13:26:20 CST] error: interrupted by error\n")])])]),s("p",[e._v("在master节点执行")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' sudo -E /bin/sh -c "/usr/local/bin/kubeadm init --config=/etc/kubernetes/kubeadm-config.yaml"\n ls -lh /etc/ssl/etcd/ssl/\n')])])]),s("p",[e._v("原来在/etc/ssl/etcd/ssl/中真不存在node-node3-key.pem、node-node3.pem，真么办？原来是我选择的是member模式。")]),e._v(" "),s("blockquote",[s("p",[e._v("解决方案")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("cp /etc/ssl/etcd/ssl/member-slave-key.pem /etc/ssl/etcd/ssl/node-slave-key.pem\ncp /etc/ssl/etcd/ssl/member-slave.pem /etc/ssl/etcd/ssl/node-slave.pem\n")])])]),s("h4",{attrs:{id:"_2-错误2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-错误2"}},[e._v("#")]),e._v(" (2) 错误2")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('error: the server doesn\'t have a resource type "secret": Process exited with status 1 \nError: Failed to get cluster status: Failed to patch kubeadm secret: Failed to exec command: sudo -E /bin/sh -c "/usr/local/bin/kubectl patch -n kube-system secret kubeadm-certs -p \'{\\"data\\": {\\"external-etcd-ca.crt\\": \\"\\"}}\'" \nerror: the server doesn\'t have a resource type "secret": Process exited with status 1\n')])])]),s("p",[e._v("证书时间过期了，好像超过两个小时就有问题了，所以我直接删除直接重新搞了下就好了")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("kk dalete cluster -f ./config-kubesphere.yaml\n")])])]),s("h4",{attrs:{id:"_3-错误3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-错误3"}},[e._v("#")]),e._v(" (3) 错误3")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("[ERROR FileExisting-conntrack]: conntrack not found in system path\n")])])]),s("p",[e._v("缺少依赖(所有节点都安装下)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("apt-get install conntrack\n")])])]),s("p",[e._v("查看kubesphere状态")]),e._v(" "),s("p",[e._v("kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-install -o jsonpath='{.items[0].metadata.name}') -f")]),e._v(" "),s("p",[e._v("kubectl get pod -A")]),e._v(" "),s("p",[e._v("重启")]),e._v(" "),s("p",[e._v("kubectl -n kubesphere-system rollout restart deploy/ks-installer")]),e._v(" "),s("p",[e._v("查看pod日志")]),e._v(" "),s("p",[e._v("kubectl logs ks-apiserver-5cf84f7895-vz8tx -n kubesphere-system")]),e._v(" "),s("p",[e._v("https://blog.csdn.net/networken/article/details/109010032")]),e._v(" "),s("p",[e._v("https://blog.csdn.net/iteye_14723/article/details/107560279?spm=1001.2014.3001.5501")])])}),[],!1,null,null,null);s.default=n.exports}}]);