(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{295:function(t,a,e){"use strict";e.r(a);var s=e(13),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("Docker 包括三个基本概念")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("镜像（Image）\n容器（Container）\n仓库（Repository）\n")])])]),a("ul",[a("li",[a("p",[t._v("镜像\n镜像是只读的。\n镜像可以想象成操作系统的安装镜像（例如CentOS6.8.ISO）。")])]),t._v(" "),a("li",[a("p",[t._v("容器\n容器是从镜像创建的运行实例。它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台。\n可以理解成 我们通过镜像安装操作系统，我们可以开机，关机，等操作。")])]),t._v(" "),a("li",[a("p",[t._v("仓库\n仓库是集中存放镜像文件的场所。\n有时候会把仓库和仓库注册服务器（Registry）混为一谈，并不严格区分。\n实际上，仓库注册服务器上往往存放着多个仓库。\n每个仓库中又包含了多个镜像，每个镜像有不同的标签（tag）。\n一个仓库中可能有centos ubuntu fedora等镜像，然后ubuntu可以有12 13 15 16等版本则使用标签标明。\n仓库分为公开仓库（Public）和私有仓库（Private）两种形式。")])])]),t._v(" "),a("h2",{attrs:{id:"创建私有仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建私有仓库"}},[t._v("#")]),t._v(" 创建私有仓库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker run -d -p 5000:5000 --name myregistry -v /myregistry:/var/lib/registry registry\n")])])]),a("p",[t._v("docker私有仓库服务器，默认是基于https传输的，所以我们需要在客户端192.168.1.160做相关设置，不使用https传输")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("vi /etc/docker/daemon.json\n")])])]),a("p",[t._v("添加")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{ "insecure-registries":["192.168.1.104:5000"]}\n')])])]),a("p",[t._v("验证")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://192.168.1.104:5000/v2/\n")])])]),a("p",[t._v("打标签")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker tag registry 192.168.1.104:5000/registry\n")])])]),a("p",[t._v("上传到私有仓库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker push 192.168.1.104:5000/registry\n")])])]),a("h2",{attrs:{id:"界面化私有仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#界面化私有仓库"}},[t._v("#")]),t._v(" 界面化私有仓库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker run -d -e ENV_DOCKER_REGISTRY_HOST=47.105.197.196 -e ENV_DOCKER_REGISTRY_PORT=5000 -p 8088:80 konradkleine/docker-registry-frontend:v2\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);