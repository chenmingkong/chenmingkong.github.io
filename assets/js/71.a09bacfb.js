(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{356:function(t,n,s){"use strict";s.r(n);var a=s(14),r=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("ol",[n("li",[t._v("新建一个数组")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('public static void main(String[] args) {\n    //法1\n    int nums1[] = new int[]{1, 2};\n    for(int i : nums1) {\n        System.out.print(i+"\\t");\n    }\n    //法2\n    Integer[] nums2 = {12,33,5,-9,233,2299,-987,2,0,1,8};\n    for(int i : nums2) {\n        System.out.print(i+"\\t");\n    }\n}\n')])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("数组排序")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('public static void main(String[] args) {\n    Integer[] nums = {12,33,5,-9,11,2299,-987,2,0,1,8};\n\n    //只排序前四个，结果-9\t5\t12\t33\t11\t2299\t-987\t2\t0\t1\t8\n    Arrays.sort(nums,0,4);\n\n    //全部排序，结果-987\t-9\t0\t1\t2\t5\t8\t11\t12\t33\t2299\n    Arrays.sort(nums);\n\n    //逆序，结果2299\t33\t12\t11\t8\t5\t2\t1\t0\t-9\t-987\n    Arrays.sort(nums, Collections.reverseOrder());\n    \n    for(int i : nums) {\n        System.out.print(i+"\\t");\n    }\n}\n')])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("int[]转成Integer[]")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int[] nums;\nInteger[] what = Arrays.stream( nums ).boxed().toArray( Integer[]::new );\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("int[]转成 List"),n("Integer")],1)]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int[] nums;\nList<Integer> list = Arrays.stream(nums).boxed().collect(Collectors.toList());\n")])])]),n("ol",{attrs:{start:"5"}},[n("li",[t._v("二分查找")])]),t._v(" "),n("p",[t._v("时间复杂度")]),t._v(" "),n("p",[t._v("二分查找也称为折半查找，每次都能将查找区间减半，这种折半特性的算法时间复杂度为 O(logN)。")]),t._v(" "),n("p",[t._v("m 计算")]),t._v(" "),n("p",[t._v("有两种计算中值 m 的方式：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("m = (l + h) / 2\n// 上面或者 m = (l + h) >>> 1;\nn = l + (h - l) / 2\n")])])]),n("p",[t._v("l + h 可能出现加法溢出，也就是说加法的结果大于整型能够表示的范围。但是 l 和 h 都为正数，因此 h - l 不会出现加法溢出问题。所以，最好使用第二种计算法方法。")])])}),[],!1,null,null,null);n.default=r.exports}}]);